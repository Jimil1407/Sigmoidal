services:
  db:
    image: postgres:16-alpine
    container_name: trading_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: trading_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      DIRECT_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      TWELVE_DATA_API_KEY: ${TWELVE_DATA_API_KEY}
      API_INTERNAL_BASE_URL: http://api:8080
    ports:
      - "8080:8080"

  fe:
    build:
      context: .
      dockerfile: apps/fe/Dockerfile
    container_name: trading_fe
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8080
      NODE_ENV: production
    ports:
      - "3000:3000"

volumes:
  db_data:
    driver: local
